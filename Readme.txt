Задание:
 + Реализовать сервисную архитектуру: три сервиса: UserService, OrderService, DeliveryService,
  которые общаются между собой
 + Реализовать общение между сервисами с использованием Rabbit MQ
 + Реализовать паттерн Inbox и Outbox
 + Реализовать паттерн  “хореография”

    UserService:
        1)создаёт заказ
        2)публикует событие о создании заказа в очередь "order_create_queue" RabbitMQ
        3)записывает в базу данных user_service в таблицу Outbox сообщение о создании заказа
        4)слушает очередь  "delivery_queue"  получает уведомление о доставке заказа
        5)записывает в базу данных user_service в таблицу Inbox сообщение о доставке заказа

    OrderService:
        1)обрабатывает заказ
        2)публикует событие о создании заказа в очередь "order_queue" RabbitMQ
        3)записывает в базу данных order_service в таблицу Outbox сообщение об обработке заказа
        4)слушает очередь  "order_create_queue"  получает уведомление о создании заказа
        5)записывает в базу данных order_service в таблицу Inbox сообщение о доставке заказа

    DeliveryService — слушает очередь событий от OrderService "заказы", принимает событие о создании заказа и отправляет уведомление в очередь RabbitMQ "доставка".
        1)доставляет заказ
        2)публикует событие о создании заказа в очередь "delivery_queue" RabbitMQ
        3)записывает в базу данных delivery_service в таблицу Outbox сообщение о принятии заказа для доставки
        4)слушает очередь  "order_queue"  получает уведомление о заказе для доставки
        5)записывает в базу данных delivery_service в таблицу Inbox сообщение о доставке заказа
